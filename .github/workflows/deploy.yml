name: Deploy React App to Google Cloud VM

on:
  push:
    branches:
      - master  # Trigger deployment on push to the master branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Debugging SSH Setup
        run: |
          # Create the .ssh directory if it doesn't exist
          mkdir -p ~/.ssh
          
          # Echo the secret SSH key to verify it's being passed correctly (for debugging only)
          echo "Debugging SSH Key:"
          echo "${{ secrets.GC_VM_SSH_KEY }}"
          
          # Echo the VM host to verify the secret is being passed correctly
          echo "Debugging VM Host:"
          echo "${{ secrets.GC_VM_HOST }}"

          # Save the SSH key to the correct location
          echo "${{ secrets.GC_VM_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Ensure the known_hosts file is correctly populated by the host
          ssh-keyscan -H ${{ secrets.GC_VM_HOST }} >> ~/.ssh/known_hosts
          
          # Check that the private key and known_hosts have been set up correctly
          echo "Checking contents of ~/.ssh:"
          ls -la ~/.ssh
          cat ~/.ssh/id_rsa
          cat ~/.ssh/known_hosts
          
          # Test SSH connection (this will fail if the SSH key or host is incorrect)
          echo "Attempting SSH connection to the VM..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa user@${{ secrets.GC_VM_HOST }} "echo 'SSH connection successful!'"
     
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GC_VM_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.GC_VM_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VM
        run: |
          ssh ${{ secrets.GC_VM_USER }}@${{ secrets.GC_VM_HOST }} << 'EOF'
            # Ensure web directory exists
            mkdir -p /home/griffinmuteti64/web
            cd /home/griffinmuteti64/web

            # Pull latest changes or clone the repo
            if [ -d ".git" ]; then
              git pull origin master
            else
              git clone git@github.com:thegeektets/savannah-accessibility-frontend.git .
            fi

            # Update API URL in .env
            echo "REACT_APP_API_URL=http://localhost/api" > .env

            # Install dependencies and build the React app
            npm install
            npm run build

            # Install Nginx if not installed
            sudo apt update
            sudo apt install -y nginx

            # Ensure Nginx default directory is clean and copy new build
            sudo rm -rf /var/www/html/*
            sudo cp -r build/* /var/www/html/

            # Set correct permissions
            sudo chown -R www-data:www-data /var/www/html
            sudo chmod -R 755 /var/www/html

            # Restart Nginx
            sudo systemctl restart nginx
          EOF
