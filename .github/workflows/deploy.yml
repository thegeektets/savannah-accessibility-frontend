name: Deploy React App to Google Cloud VM

on:
  push:
    branches:
      - master  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts || exit 1

      - name: Deploy to VM
        run: |
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            set -e  # Exit on error

            # Ensure web directory exists
            mkdir -p /home/griffinmuteti64/web
            cd /home/griffinmuteti64/web

            # Clone or pull latest changes
            if [ -d ".git" ]; then
              git reset --hard
              git checkout master
              git pull origin master
            else
              git clone git@github.com:thegeektets/savannah-accessibility-frontend.git .
              git checkout master
            fi

            # Install or update NVM and use latest Node.js LTS
            export NVM_DIR="$HOME/.nvm"
            if [ ! -d "\$NVM_DIR" ]; then
              curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
              source ~/.bashrc
            fi
            source ~/.nvm/nvm.sh
            nvm install --lts
            nvm use --lts
            node -v  # Check Node.js version

            # Update API URL in .env
            echo "REACT_APP_API_URL=http://localhost/api" > .env

            # Install dependencies and build the React app
            npm install
            npm run build

            # Install Nginx without requiring a password
            echo "${{ secrets.VM_PASSWORD }}" | sudo -S apt update
            echo "${{ secrets.VM_PASSWORD }}" | sudo -S apt install -y nginx

            # Ensure Nginx default directory is clean and copy new build
            echo "${{ secrets.VM_PASSWORD }}" | sudo -S rm -rf /var/www/html/*
            echo "${{ secrets.VM_PASSWORD }}" | sudo -S cp -r build/* /var/www/html/

            # Set correct permissions
            echo "${{ secrets.VM_PASSWORD }}" | sudo -S chown -R www-data:www-data /var/www/html
            echo "${{ secrets.VM_PASSWORD }}" | sudo -S chmod -R 755 /var/www/html

            # Restart Nginx
            echo "${{ secrets.VM_PASSWORD }}" | sudo -S systemctl restart nginx
          EOF
